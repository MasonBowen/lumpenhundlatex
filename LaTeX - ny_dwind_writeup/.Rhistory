getwd()
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
library(gridExtra)
setwd("C:/Users/tbowen/Documents/Website - Greening the Grid/GI/Energy Storage Technologies")
batdat <- fread("lithium_ion_battery_price_survey_vals.csv")
batdat[, Year := factor(as.character(Year), levels = as.character(2010:2019))]
xxx <- data.frame(x1 = "2010", x2 = "2019",
y1 = batdat[Year == "2010", Price],
y2 = batdat[Year == "2019", Price])
CAGR = (xxx$y2/xxx$y1)^(1/(as.numeric(as.character(xxx$x2)) - as.numeric(as.character(xxx$x1))))-1
yyy <- data.table(X1 = 2010:2018,
X2 = 2011:2019)
yyy[, Y1 := batdat[Year %in% yyy$X1,Price,]]
yyy[, Y2 := (CAGR+1)*Y1]
shift(1:5, n=1L, fill=NA, type=c("lag"), give.names=FALSE)
shift(yyy$Y1, n=1L, fill=NA, type=c("lag"), give.names=FALSE)
shift(yyy$Y1, n=1L, fill=NA, type=c("lead"), give.names=FALSE)
shift(yyy$Y1, n=1L, fill=yyy$Y1[1], type=c("lead"), give.names=FALSE)
shift(yyy$Y1, n=1L, fill=yyy$Y1[1], type=c("lag"), give.names=FALSE)
yyy
shift(yyy$Y2, n=1L, fill=yyy$Y1[1], type=c("lag"), give.names=FALSE)
yyy[, Y3 := shift(yyy$Y2, n=1L, fill=yyy$Y1[1], type="lag", give.names=FALSE)]
yyy
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
library(gridExtra)
setwd("C:/Users/tbowen/Documents/Website - Greening the Grid/GI/Energy Storage Technologies")
batdat <- fread("lithium_ion_battery_price_survey_vals.csv")
batdat[, Year := factor(as.character(Year), levels = as.character(2010:2019))]
xxx <- data.frame(x1 = "2010", x2 = "2019",
y1 = batdat[Year == "2010", Price],
y2 = batdat[Year == "2019", Price])
CAGR = (xxx$y2/xxx$y1)^(1/(as.numeric(as.character(xxx$x2)) - as.numeric(as.character(xxx$x1))))-1
yyy <- data.table(X1 = 2010:2018,
X2 = 2011:2019)
yyy[, Y1 := batdat[Year %in% yyy$X1,Price,]]
yyy[, Y2 := (CAGR+1)*Y1]
yyy[, Y1 := shift(yyy$Y2, n=1L, fill=yyy$Y1[1], type="lag", give.names=FALSE)]
yyy
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
library(gridExtra)
setwd("C:/Users/tbowen/Documents/Website - Greening the Grid/GI/Energy Storage Technologies")
batdat <- fread("lithium_ion_battery_price_survey_vals.csv")
batdat[, Year := factor(as.character(Year), levels = as.character(2010:2019))]
xxx <- data.frame(x1 = "2010", x2 = "2019",
y1 = batdat[Year == "2010", Price],
y2 = batdat[Year == "2019", Price])
CAGR = (xxx$y2/xxx$y1)^(1/(as.numeric(as.character(xxx$x2)) - as.numeric(as.character(xxx$x1))))-1
yyy <- data.table(X1 = 2010:2018,
X2 = 2011:2019)
yyy[, Y1 := batdat[Year %in% yyy$X1,Price,]]
yyy[, Y2 := (CAGR+1)*Y1]
yyy[, Y1 := shift(Y2, n=1L, fill=Y1[1], type="lag", give.names=FALSE)]
yyy
yyy <- data.table(X1 = 2010:2018,
X2 = 2011:2019)
yyy[, Y1 := batdat[Year %in% yyy$X1,Price,]]
yyy[, Y2 := (CAGR+1)*Y1]
yyy
yyy[, Y1 := shift(Y2, n=1L, fill=Y1[1], type="lag", give.names=FALSE)]
yyy
gplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")
ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")
yyy
ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = X1, y = Y1, xend = X2, yend = Y2), data = yyy,
curvature = .24, size = 1.5, color = "darkred")
yyy <- data.table(X1 = as.cahracter(2010:2018),
X2 = as.character(2011:2019))
yyy <- data.table(X1 = as.character(2010:2018),
X2 = as.character(2011:2019))
yyy[, Y1 := batdat[Year %in% yyy$X1,Price,]]
yyy[, Y2 := (CAGR+1)*Y1]
yyy[, Y1 := shift(Y2, n=1L, fill=Y1[1], type="lag", give.names=FALSE)]
ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = X1, y = Y1, xend = X2, yend = Y2), data = yyy,
curvature = .24, size = 1.5, color = "darkred")
ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = X1, y = Y1, xend = X2, yend = Y2), data = yyy,
curvature = 0, size = 1.5, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
yyy
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
batt_pack_price_survey
ggsave(batt_pack_price_survey, filename = "batt_pack_price_survey.png",
device =  "png", width = 30, height = 15, units = "cm", dpi = 330)
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
library(gridExtra)
library(stringr)
install.packages("ggrepel")
library(ggrepel)
setwd("C:/Users/tbowen/Documents/Website - Greening the Grid/GI/Energy Storage Technologies")
batdat <- fread("summary_utility-scale_costs_lithium-ion_bnef.csv", header = TRUE)
batdat <- melt.data.table(batdat, measure.vars = as.character(2017:2050),
variable.name = "Year", value.name = "Cost")
type_group <- setNames(nm = c('Battery rack', 'PCS', 'Balance of system',
'Energy Management System', 'EPC', 'Developer overheads',
'Grid connection', 'Developer margin', 'Transformer', 'Total'),
object = c("Battery Rack", "Supporting\nInfrastructure", "Soft Costs",
"Supporting\nInfrastructure", "Soft Costs", "Soft Costs",
"Supporting\nInfrastructure", "Soft Costs", "Supporting\nInfrastructure", "Total"))
batdat[, Type := str_replace_all(Type, type_group)]
batdat <- batdat[, .(Cost = sum(Cost)), by = .(Year, Type)]
batdat <- batdat[Type != "Total",]
type_cols <- setNames(nm = c('Battery Rack', 'Supporting Infrastructure', 'Soft Costs'),
object = c('steelblue3', 'ochre', 'seagreen'))
batdat[, `:=` (Year = factor(as.character(Year),
levels = as.character(2017:2050)),
Type = factor(as.character(Type),
levels = c('Supporting\nInfrastructure', 'Soft Costs', 'Battery Rack')))]
xxx <- batdat[Year %in% levels(batdat$Year)[c(1, length(levels(batdat$Year)))]][, .(Cost = sum(Cost)), by = .(Year)]
library(ggrepel)
library(data.table)
library(ggplot2)
library(ggthemes)
library(grid)
library(gridExtra)
library(ggrepel)
setwd("C:/Users/tbowen/Documents/Website - Greening the Grid/GI/Energy Storage Technologies")
batdat <- fread("lithium_ion_battery_price_survey_vals.csv")
batdat[, Year := factor(as.character(Year), levels = as.character(2010:2019))]
xxx <- data.frame(x1 = "2010", x2 = "2019",
y1 = batdat[Year == "2010", Price],
y2 = batdat[Year == "2019", Price])
CAGR = (xxx$y2/xxx$y1)^(1/(as.numeric(as.character(xxx$x2)) - as.numeric(as.character(xxx$x1))))-1
# yyy <- data.table(X1 = 2010:2018,
#                   X2 = 2011:2019)
# yyy[, Y1 := batdat[Year %in% yyy$X1,Price,]]
# yyy[, Y2 := (CAGR+1)*Y1]
# yyy[, Y3 := shift(Y2, "lead", fill = Y1[1])]
# shift(x, n=1L, fill=NA, type=c("lag", "lead", "shift"), give.names=FALSE)
ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)
ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
geom_text_repel(aes(label = rownames(df)),
size = 3.5)
batdat
ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
geom_text_repel(aes(label = Price, x = Year, Y = Price + 100), data = batdat, size = 3.5)
ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
geom_text_repel(aes(label = Price, x = Year, y = Price + 100), data = batdat, size = 3.5)
p <- ggplot(mtcars,
aes(wt, mpg, label = rownames(mtcars), colour = factor(cyl))) +
geom_point()
# Avoid overlaps by repelling text labels
p + geom_text_repel()
# Labels with background
p + geom_label_repel()
# }
# NOT RUN {
p + geom_text_repel(family = "Times New Roman",
box.padding = 0.5)
# Add aesthetic mappings
p + geom_text_repel(aes(alpha=wt, size=mpg))
p + geom_label_repel(aes(fill=factor(cyl)), colour="white", segment.colour="black")
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
geom_text_repel(aes(label = Price, x = Year, y = Price + 100), data = batdat, size = 8)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
batt_pack_price_survey
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
# annotate(geom = "text", x = "2017", y = 1000,
#          label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
#          parse = FALSE, size = 8)+
geom_text_repel(aes(label = Price, x = Year, y = Price + 100), data = batdat, size = 18)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
batt_pack_price_survey
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
# geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
#           data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
geom_text_repel(aes(label = Price, x = Year, y = Price + 100), data = batdat, size = 18)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
batt_pack_price_survey
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
# geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
#           data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
geom_text_repel(aes(label = Price, x = Year, y = Price + 100), data = batdat, size = 18, min.segment.length = 0)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
batt_pack_price_survey
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
# geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
#           data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
geom_text_repel(aes(label = Price, x = Year, y = Price), data = batdat, size = 18, min.segment.length = 0)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
batt_pack_price_survey
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
# geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
#           data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
geom_labe_repel(aes(label = Price, x = Year, y = Price), data = batdat, size = 18, min.segment.length = 0)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
# geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
#           data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
geom_label_repel(aes(label = Price, x = Year, y = Price), data = batdat, size = 18, min.segment.length = 0)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
batt_pack_price_survey
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
# geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
#           data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
geom_label_repel(aes(label = Price, x = Year, y = Price), data = batdat, size = 8, min.segment.length = 0)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
batt_pack_price_survey
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
# geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
#           data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
# geom_label_repel(aes(label = Price, x = Year, y = Price), data = batdat, size = 8, min.segment.length = 0)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
scale_y_continuous(breaks = seq(0,1200, 400), minor_breaks = seq(0, 1200, 200))+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
batt_pack_price_survey
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
# geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
#           data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 2, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
# geom_label_repel(aes(label = Price, x = Year, y = Price), data = batdat, size = 8, min.segment.length = 0)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
scale_y_continuous(breaks = seq(0,1200, 300), minor_breaks = seq(0, 1200, 200))+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
ggsave(batt_pack_price_survey, filename = "batt_pack_price_survey.png",
device =  "png", width = 30, height = 15, units = "cm", dpi = 330)
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
# geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
#           data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 1.75, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
# geom_label_repel(aes(label = Price, x = Year, y = Price), data = batdat, size = 8, min.segment.length = 0)+
theme_bw(base_size = 16)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
scale_y_continuous(breaks = seq(0,1200, 300), minor_breaks = seq(0, 1200, 200))+
theme(panel.grid = element_blank(), axis.text = element_text(size = 15))
ggsave(batt_pack_price_survey, filename = "batt_pack_price_survey.png",
device =  "png", width = 30, height = 15, units = "cm", dpi = 330)
batt_pack_price_survey <- ggplot()+
geom_bar(mapping = aes(x = Year, y = Price), data = batdat,
fill = "steelblue3", color = "black", stat = "identity")+
# geom_text(mapping = aes(x = Year, y = Price + 100, label = round(Price, digits = 0)),
#           data = batdat, size = 5, fontface=2)+
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = "CAGR"), data = xxx,
curvature = .24, size = 1.75, color = "darkred")+
annotate(geom = "text", x = "2017", y = 1000,
label = paste0("10 Year Compound Annual\nGrowth Rate: - ", abs(round(CAGR*100, digits = 2)), "%"),
parse = FALSE, size = 8)+
# geom_label_repel(aes(label = Price, x = Year, y = Price), data = batdat, size = 8, min.segment.length = 0)+
theme_bw(base_size = 20)+
labs(x=NULL, y = "Battery Pack Price ($/kWh)")+
scale_y_continuous(breaks = seq(0,1200, 300), minor_breaks = seq(0, 1200, 200))+
theme(panel.grid = element_blank(), axis.text = element_text(size = 20))
ggsave(batt_pack_price_survey, filename = "batt_pack_price_survey.png",
device =  "png", width = 30, height = 15, units = "cm", dpi = 330)
library(data.table)
library (lubridate)
library(stringr)
start_date <- as.POSIXct("2018-06-17 00:00")
end_date <- as.POSIXct("2018-06-23 23:00")
tz(start_date) <- "EST"
tz(end_date) <- "EST"
weekdata <- seq(start_date, end_date, by = "1 hour")
heat_map_data <- data.table("time" = weekdata)
heat_map_data[, `:=` (Weekday = weekdays(time),
Hour = lubridate::hour(time))]
heat_map_data[!(Weekday %in% c("Sunday", "Saturday")) & Hour %in% c(14:18), Value := "Yes"]
heat_map_data[is.na(Value), Value := "No"]
heat_map_data[, `:=` (time2 = rep(heat_map_data[Weekday == "Sunday", time], times = 7)),]
heat_map_data$Weekday <- factor(heat_map_data$Weekday, levels = rev(c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")))
heat_map_data$Value <- factor(heat_map_data$Value, levels = c("Yes","No"))
weekday_date_labels <- setNames(nm= c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"),
object = heat_map_data[, .(Date = format(lubridate::date(time)[1], "%m-%d-%Y")),
by = .(Weekday)][, do.call(paste, c(.SD, sep = "\n\n")),])
capacity_value_valid_hours <- ggplot(heat_map_data, aes(x = time2, y = Weekday))+
geom_tile(aes(fill = Value), colour = "white")+
scale_fill_manual(name = "Valid Hours for\nCapacity Value",
values = setNames(object = c("lightpink", "palegreen4"), nm = c("No","Yes")))+
scale_y_discrete(labels = function(x) str_replace_all(x, weekday_date_labels))+
scale_x_datetime(date_breaks = "4 hours", minor_breaks = "2 hours", date_labels = "%H:%M")+
labs(x = "\nHour", y = "Day\n")+
theme_bw(base_size = 12)+
theme(axis.text.y = element_text(hjust = .5), legend.title = element_text(hjust = .5))
capacity_value_valid_hours
library(data.table)
library (lubridate)
library(stringr)
start_date <- as.POSIXct("2018-06-17 00:00")
end_date <- as.POSIXct("2018-06-23 23:00")
tz(start_date) <- "EST"
tz(end_date) <- "EST"
weekdata <- seq(start_date, end_date, by = "1 hour")
heat_map_data <- data.table("time" = weekdata)
heat_map_data[, `:=` (Weekday = weekdays(time),
Hour = lubridate::hour(time))]
heat_map_data[!(Weekday %in% c("Sunday", "Saturday")) & Hour %in% c(14:18), Value := "Yes"]
heat_map_data[is.na(Value), Value := "No"]
heat_map_data[, `:=` (time2 = rep(heat_map_data[Weekday == "Sunday", time], times = 7)),]
heat_map_data$Weekday <- factor(heat_map_data$Weekday, levels = rev(c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")))
heat_map_data$Value <- factor(heat_map_data$Value, levels = c("Yes","No"))
weekday_date_labels <- setNames(nm= c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"),
object = heat_map_data[, .(Date = format(lubridate::date(time)[1], "%m-%d-%Y")),
by = .(Weekday)][, do.call(paste, c(.SD, sep = "\n")),])
capacity_value_valid_hours <- ggplot(heat_map_data, aes(x = time2, y = Weekday))+
geom_tile(aes(fill = Value), colour = "white")+
scale_fill_manual(name = "Valid Hours for\nCapacity Value",
values = setNames(object = c("lightpink", "palegreen4"), nm = c("No","Yes")))+
scale_y_discrete(labels = function(x) str_replace_all(x, weekday_date_labels))+
scale_x_datetime(date_breaks = "4 hours", minor_breaks = "2 hours", date_labels = "%H:%M")+
labs(x = "\nHour", y = "Day\n")+
theme_bw(base_size = 12)+
theme(axis.text.y = element_text(hjust = .5), legend.title = element_text(hjust = .5))
ggsave(capacity_value_valid_hours, filename = "images/cap_val_hours.png",
device = "png", width = 20, height = 12, units = "cm", dpi = 330)
library(data.table)
library (lubridate)
library(stringr)
setwd("C:/Users/tbowen/Documents/dGen/New York/NYISO Data/dWind-NY/LaTeX - ny_dwind_writeup")
start_date <- as.POSIXct("2018-06-17 00:00")
end_date <- as.POSIXct("2018-06-23 23:00")
tz(start_date) <- "EST"
tz(end_date) <- "EST"
weekdata <- seq(start_date, end_date, by = "1 hour")
heat_map_data <- data.table("time" = weekdata)
heat_map_data[, `:=` (Weekday = weekdays(time),
Hour = lubridate::hour(time))]
heat_map_data[!(Weekday %in% c("Sunday", "Saturday")) & Hour %in% c(14:18), Value := "Yes"]
heat_map_data[is.na(Value), Value := "No"]
heat_map_data[, `:=` (time2 = rep(heat_map_data[Weekday == "Sunday", time], times = 7)),]
heat_map_data$Weekday <- factor(heat_map_data$Weekday, levels = rev(c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")))
heat_map_data$Value <- factor(heat_map_data$Value, levels = c("Yes","No"))
weekday_date_labels <- setNames(nm= c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"),
object = heat_map_data[, .(Date = format(lubridate::date(time)[1], "%m-%d-%Y")),
by = .(Weekday)][, do.call(paste, c(.SD, sep = "\n")),])
capacity_value_valid_hours <- ggplot(heat_map_data, aes(x = time2, y = Weekday))+
geom_tile(aes(fill = Value), colour = "white")+
scale_fill_manual(name = "Valid Hours for\nCapacity Value",
values = setNames(object = c("lightpink", "palegreen4"), nm = c("No","Yes")))+
scale_y_discrete(labels = function(x) str_replace_all(x, weekday_date_labels))+
scale_x_datetime(date_breaks = "4 hours", minor_breaks = "2 hours", date_labels = "%H:%M")+
labs(x = "\nHour", y = "Day\n")+
theme_bw(base_size = 12)+
theme(axis.text.y = element_text(hjust = .5), legend.title = element_text(hjust = .5))
ggsave(capacity_value_valid_hours, filename = "images/cap_val_hours.png",
device = "png", width = 20, height = 12, units = "cm", dpi = 330)
